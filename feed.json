{
    "version": "https://jsonfeed.org/version/1",
    "title": "Lab3F",
    "description": "",
    "home_page_url": "https://tommysush.github.io",
    "feed_url": "https://tommysush.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "PI of Lab3F"
    },
    "items": [
        {
            "id": "https://tommysush.github.io/qian-tan-state-property-wrapper-in-swiftui.html",
            "url": "https://tommysush.github.io/qian-tan-state-property-wrapper-in-swiftui.html",
            "title": "淺談 @State property wrapper in SwiftUI",
            "summary": "利用 SwiftUI 開發的過程中，經常會在 ContentView 底下將 property 冠上 @State 這個 property wrapper，並將其作為 parameter 引入其他 view 或 controller。若 view 或 controller 同時是與使用者互動的 UI（user interface），parameter 通常必須是 Binding&lt;Value&gt; ，此時，我們會進一步在 property 變數前加上 $ 。範例如下： struct ContenView: View { @State private var fontSize: CGFloat = 35 var body: some View {&hellip;",
            "content_html": "<p>利用 SwiftUI 開發的過程中，經常會在 <strong>ContentView</strong> 底下將 property 冠上 <code>@State</code> 這個 property wrapper，並將其作為 parameter 引入其他 view 或 controller。若 view 或 controller 同時是與使用者互動的 UI（user interface），parameter 通常必須是 <code>Binding&lt;Value&gt;</code> ，此時，我們會進一步在 property 變數前加上 <code>$</code> 。範例如下：</p>\n<pre><code class=\"language-swift\">struct ContenView: View {\n    @State private var fontSize: CGFloat = 35\n\n    var body: some View {\n        Text(&quot;Hello world&quot;)\n            .font(.custom(name: &quot;Helvetica&quot;, size: fontSize))\n        Slider(value: $fontSize, in: 10...60)\n    }\n}</code></pre>\n<p>根據 SwiftUI 的定義，<code>@State</code> property wrapper 實際上是一個 struct，而存入的值其實是放置在名為 <strong>wrappedValue</strong> 的變數中。</p>\n<pre><code class=\"language-siwft\">@propertyWrapper public struct State&lt;Value&gt; : DynamicProperty {\n    ...\n    public var wrappedValue: Value { get nonmutating set }\n}</code></pre>\n<p><strong>wrappedValue</strong> 本身可以被讀取（get）、也可以被寫入（set），但 SwiftUI 是在其他地方保存值以進行利用，所以寫入不會對 struct 產生任何改變（nonmutating）。因此，我們無法利用 property observer 來觀察或加入其他動作（e.g. <code>print(newValue)</code>），對於 property observer 來說，它所負責監看的，是 <strong>包裹著變數的 State struct</strong> 本身究竟有無改變，既然沒有改變就無法觸發 observer 內的動作。</p>\n<p>如果非得要觀察或加入動作的話，必須透過 <code>Binding&lt;Value&gt;</code> 來達成。其定義如下：</p>\n<pre><code class=\"language-swift\">@propertyWrapper @dynamicMemberLookup public struct Binding&lt;Value&gt; {\n    ...\n    public init(get: @escaping () -&gt; Value, set: @escaping (Value) -&gt; Void)\n}</code></pre>\n<p>做法是在原先的 view 或 controller 底下加入一個 Binding 變數，然後在 getter 中將 State 變數指定給它，而在 setter 中則是將 newValue（亦可用 shortcut <code>$0</code>）設定給 Binding 變數。最後，只要將原先 view 或 controller 底下的替換掉即可。範例如下：</p>\n<pre><code class=\"language-siwft\">struct ContenView: View {\n    @State private var fontSize: CGFloat = 35\n\n    var body: some View {\n        // 新增的 Binding 變數\n        let size: Binding&lt;CGFloat&gt;(\n            get: {\n                return self.fontSize\n            }, set: { newValue in\n                self.fontSize = newValue\n                print(&quot;New value is \\(self.fontSize)&quot;)\n            }\n        )\n\n        Text(&quot;Hello world&quot;)\n            .font(.custom(name: &quot;Helvetica&quot;, size: fontSize))\n\n        // 將原先的參數從 $fontSize 替換為 size\n        Slider(value: size, in: 10...60)\n    }\n}</code></pre>\n<p>如此一來，當使用者滑動 slider 時，新的值會透過 setter 傳遞給 fontSize，同時也會 print 出新的值（原先無法以 property observer 完成的動作），而 Text view 也會隨著 fontSize 的改變而加大字體或縮小。</p>\n",
            "image": "https://tommysush.github.io/media/posts/6/joshua-reddekopp-SyYmXSDnJ54-unsplash.jpg",
            "author": {
                "name": "PI of Lab3F"
            },
            "tags": [
                   "Swift &amp; SwiftUI",
                   "Self-Learned"
            ],
            "date_published": "2021-02-21T00:42:39+08:00",
            "date_modified": "2021-02-21T15:40:43+08:00"
        },
        {
            "id": "https://tommysush.github.io/ce-shigoogle-photo-zuo-wei-tu-ceng.html",
            "url": "https://tommysush.github.io/ce-shigoogle-photo-zuo-wei-tu-ceng.html",
            "title": "Publii 對 Google 相簿 和 YouTube 的支援測試",
            "summary": "測試結果Image：透過 Google 相簿連結轉換工具後，即可順利插入圖片（正常使用😄）Gallery：只能插入電腦檔案，無法以網址連結建立（無法使用😢）Media：只要直接貼上 Youtube 影片的連結網址即可（正常使用😄）使用建議圖片的 Class 設定值，使用 Wide image 或 Centered image 即可，長寬無需自訂如果想展示多張圖片，只能組合 Left-aligned image 和 Right-aligned image，但不建議這樣使用。如果排版因此跑掉，可以在 &lt; &gt; HTML 模式下調整。👇以下為 Image 不同 Class 設定的展示👇 YouTube影片",
            "content_html": "<h4><span style=\"color: #2dc26b;\"><strong>測試結果</strong></span></h4>\n<ul>\n<li><span style=\"color: #3598db;\"><strong>Image</strong></span>：透過 <a href=\"https://www.oxxostudio.tw/project/google-photo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google 相簿連結轉換工具</a>後，即可順利插入圖片（正常使用😄）</li>\n<li><span style=\"color: #3598db;\"><strong>Gallery</strong></span>：只能插入電腦檔案，無法以網址連結建立（無法使用😢）</li>\n<li><span style=\"color: #3598db;\"><strong>Media</strong></span>：只要直接貼上 Youtube 影片的連結網址即可（正常使用😄）</li>\n</ul>\n<h4><span style=\"color: #2dc26b;\"><strong>使用建議</strong></span></h4>\n<ul>\n<li>圖片的 Class 設定值，使用 <em>Wide image</em> 或 <em>Centered image</em> 即可，長寬無需自訂</li>\n<li>如果想展示多張圖片，只能組合 <em>Left-aligned image</em> 和 <em>Right-aligned image</em>，但不建議這樣使用。如果排版因此跑掉，可以在 <span style=\"color: #3598db;\"><strong>&lt; &gt; HTML </strong></span>模式下調整。</li>\n</ul>\n<p class=\"align-center\">👇以下為 <span style=\"color: #3598db;\"><strong>Image</strong></span> 不同 Class 設定的展示👇</p>\n<figure class=\"post__image post__image--full\" ><img loading=\"lazy\" src=\"https://lh3.googleusercontent.com/Cnyl5C97Sd2--KMcsnxtoSw1N4I014ymR5m3Ykca9UkyokVC6qQGeZu_Sx6K2kaKjnAuC8ESoReVZHgvcIYdJHGE9oyd4LlIbdZifkA7Do4nJH1fSu1afJJngT1aTTd5_SmiWw4C=w1200\" data-is-external-image=\"true\"  alt=\"Cama Cafe（Full image）\" width=\"\" height=\"\">\n<figcaption ><span style=\"color: #e03e2d;\"><strong>單張照片（Full Image）</strong></span></figcaption>\n</figure>\n<figure class=\"post__image post__image--wide\" ><img loading=\"lazy\" src=\"https://lh3.googleusercontent.com/Cnyl5C97Sd2--KMcsnxtoSw1N4I014ymR5m3Ykca9UkyokVC6qQGeZu_Sx6K2kaKjnAuC8ESoReVZHgvcIYdJHGE9oyd4LlIbdZifkA7Do4nJH1fSu1afJJngT1aTTd5_SmiWw4C=w1200\" data-is-external-image=\"true\"  alt=\"Cama cafe（Wide image）\" width=\"1200\" height=\"761\">\n<figcaption ><span style=\"color: #e03e2d;\"><strong>單張照片（Wide Image）</strong></span></figcaption>\n</figure>\n<figure class=\"post__image post__image--left\" ><img loading=\"lazy\" src=\"https://lh3.googleusercontent.com/Cnyl5C97Sd2--KMcsnxtoSw1N4I014ymR5m3Ykca9UkyokVC6qQGeZu_Sx6K2kaKjnAuC8ESoReVZHgvcIYdJHGE9oyd4LlIbdZifkA7Do4nJH1fSu1afJJngT1aTTd5_SmiWw4C=w1200\" data-is-external-image=\"true\"  alt=\"Cama Cafe（Left-aligned image）\" width=\"200\" height=\"128\">\n<figcaption ><strong><span style=\"color: #e03e2d;\">單張照片（Left-aligned Image）</span></strong></figcaption>\n</figure>\n<figure class=\"post__image post__image--right\" ><img loading=\"lazy\" src=\"https://lh3.googleusercontent.com/Cnyl5C97Sd2--KMcsnxtoSw1N4I014ymR5m3Ykca9UkyokVC6qQGeZu_Sx6K2kaKjnAuC8ESoReVZHgvcIYdJHGE9oyd4LlIbdZifkA7Do4nJH1fSu1afJJngT1aTTd5_SmiWw4C=w1200\" data-is-external-image=\"true\"  alt=\"Cama Cafe（Right-aligned image）\" width=\"200\" height=\"128\">\n<figcaption ><span style=\"color: #e03e2d;\"><strong>單張照片（Right-aligned image）</strong></span></figcaption>\n</figure>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://lh3.googleusercontent.com/Cnyl5C97Sd2--KMcsnxtoSw1N4I014ymR5m3Ykca9UkyokVC6qQGeZu_Sx6K2kaKjnAuC8ESoReVZHgvcIYdJHGE9oyd4LlIbdZifkA7Do4nJH1fSu1afJJngT1aTTd5_SmiWw4C=w1200\" data-is-external-image=\"true\"  alt=\"Cama Cafe（Centered image）\" width=\"200\" height=\"128\">\n<figcaption ><span style=\"color: #e03e2d;\"><strong>單張照片（Centered image）</strong></span></figcaption>\n</figure>\n<figure class=\"post__video\"><iframe loading=\"lazy\" width=\"560\" height=\"314\" src=\"https://www.youtube.com/embed/erqYCXR7jrw\" allowfullscreen=\"allowfullscreen\" data-mce-fragment=\"1\"></iframe></figure>\n<p class=\"align-center\"><span style=\"color: #e03e2d;\"><strong>YouTube影片</strong></span></p>",
            "image": "https://tommysush.github.io/media/posts/2/rajeshwar-bachu-K4txLik7pnY-unsplash.jpg",
            "author": {
                "name": "PI of Lab3F"
            },
            "tags": [
                   "Self-Learned"
            ],
            "date_published": "2021-02-19T23:53:11+08:00",
            "date_modified": "2021-02-21T15:40:30+08:00"
        },
        {
            "id": "https://tommysush.github.io/xie-zai-zhi-qian.html",
            "url": "https://tommysush.github.io/xie-zai-zhi-qian.html",
            "title": "寫在之前 Some things must be written first.",
            "summary": "<p>2018年11月 —— 在即將度過40歲生日的前夕，因為某些（<span style=\"text-decoration: line-through;\">糾紛</span>）緣故（<span style=\"text-decoration: line-through;\">被迫</span>）離開待了將近15年的公司。雖然提早離開職場本來就在個人的生涯規劃之中，但是就安排的時程來看，還是較預定提前了將近2年，而且當初設定的資產目標，其實也尚未百分之百達成。不過，人生本來就不可能完全按照計劃走。畢竟，如果事事都如預期，那人生豈不是太無趣了嗎！</p>\n",
            "content_html": "<p>2018年11月 —— 在即將度過40歲生日的前夕，因為某些（<span style=\"text-decoration: line-through;\">糾紛</span>）緣故（<span style=\"text-decoration: line-through;\">被迫</span>）離開待了將近15年的公司。雖然提早離開職場本來就在個人的生涯規劃之中，但是就安排的時程來看，還是較預定提前了將近2年，而且當初設定的資產目標，其實也尚未百分之百達成。不過，人生本來就不可能完全按照計劃走。畢竟，如果事事都如預期，那人生豈不是太無趣了嗎！</p>\n\n<p>只不過，提前退職的這兩年等於壓縮到了<strong>過渡期</strong> —— 用於培養退職後興趣與準備個人志業開發的時間。因此，過去這兩年除了保持原本的運動習慣之外，就是不斷設法尋找感興趣並且能夠長期保持熱情的新領域。所幸在2020年的尾聲，總算讓我找到了 —— <strong>Mobile App Development</strong>。</p>\n<p>過去任職於金融產業期間，曾經使用 <strong>Python </strong>與 <strong>Django framework </strong>架設網站，專門用來追蹤台灣上市櫃公司財務數據和營收。當時，對於<strong>程式語言能讓個人憑藉其力創造出新工具</strong>一事深深著迷。當然，除此之外應該還包含以下幾個重要因素：</p>\n<ol>\n<li>程式語言的變革日新月異，永遠有學習不完的新知識，正好迎合個人<span style=\"text-decoration: line-through;\">喜新厭舊</span>喜好學習新事物、充滿好奇心的人格特質。</li>\n<li>Mobile App Development 涵蓋了 UI 設計，能滿足個人對於色彩、排版的濃厚興趣。</li>\n<li>App Development 可以結合過去在金融領域的專業知識，說不定有朝一日能開發出對於個人或社會有所助益的工具。</li>\n<li>在 \"人手一機、人工智慧隨處可見\" 的時代，以 App Development 作為<strong>一人公司</strong>的營運項目可以說再合適不過了。</li>\n</ol>\n<blockquote>\n<p><em>當你變得太小而不會倒時，你也能變得小到能對自己的工作做出自己的選擇。當你定義了你的目標上限，找出你自己對足夠的感覺時，你就能獲得真正的自由。</em>  —  <strong>Company of One, by Paul Jarvis</strong></p>\n</blockquote>\n<p>至於開設這個部落格的初心，與其說是想分享些什麼，倒不如說單純是<span style=\"color: #e03e2d;\"><strong>給自己一處能抒發心情，用來記錄生活中所見、所聞、所學、所想的小天地</strong></span>！畢竟，沒有顯赫的家世背景，更沒有能拿來說嘴的豐功偉業，在下只是區區一介草民、素人而已。所以，各位走過、路過的看倌，請隨便讀讀、看看就好。站內文章的（預計）分類及說明如下，</p>\n<ul>\n<li><strong>FIRE / 財務自由人生</strong>：寫些關於人生回顧、自我反省，或是經驗談等等...</li>\n<li><strong>Self-Learned / 自學筆記</strong>：彙整不同知識領域上的學習心得，甚至非學術領域...</li>\n<li><strong>Travel Notes / 旅遊手札</strong>：記錄關於旅遊行前準備、和旅程中各式各樣的酸甜苦辣...</li>\n<li><strong>Asset Management / 資產管理</strong>：追蹤資產標的現況，景氣與金融環境的變化趨勢...</li>\n</ul>\n<p>對於文章的內容有任何疑問或指教，都歡迎大家利用文章下方的 <strong>留言板</strong> 進行互動，但請務必遵守留言政策（<strong>保持禮貌與尊重</strong>），謝謝。</p>\n<p> </p>",
            "image": "https://tommysush.github.io/media/posts/1/jan-kahanek-fVUl6kzIvLg-unsplash.jpg",
            "author": {
                "name": "PI of Lab3F"
            },
            "tags": [
                   "Retrospection",
                   "FIRE"
            ],
            "date_published": "2021-02-18T00:08:21+08:00",
            "date_modified": "2021-02-19T23:48:44+08:00"
        }
    ]
}
